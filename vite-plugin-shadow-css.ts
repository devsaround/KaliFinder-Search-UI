import type { Plugin } from 'vite';

/**
 * Vite plugin to bundle processed CSS as an exportable string for Shadow DOM injection
 * This ensures Tailwind CSS is fully processed before being embedded
 */
export function shadowCssPlugin(): Plugin {
  let cssCode = '';

  return {
    name: 'vite-plugin-shadow-css',
    enforce: 'post', // Run after other plugins process CSS

    // Capture CSS generated by Tailwind and other processors
    generateBundle(_, bundle) {
      // Find CSS assets in the bundle
      for (const [fileName, chunk] of Object.entries(bundle)) {
        if (fileName.endsWith('.css') && chunk.type === 'asset') {
          cssCode = chunk.source.toString();
          // Remove the CSS file from output since we'll inline it
          delete bundle[fileName];
        }
      }
    },

    // Inject CSS as a module that can be imported
    transform(code, id) {
      if (id.endsWith('embed-search.tsx')) {
        // Replace the CSS import with inline CSS content
        return {
          code: code.replace(
            "import './index.css';",
            `const __WIDGET_CSS__ = ${JSON.stringify(cssCode)};`
          ),
          map: null,
        };
      }
      return null;
    },
  };
}
